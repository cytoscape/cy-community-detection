package org.cytoscape.app.communitydetection.subnetwork;

import java.util.List;
import java.util.Set;
import org.cytoscape.model.CyNetwork;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Given a hierarchy network generated by CDAPS
 * find the parent network
 * @author churas
 */
public class ParentNetworkFinder {
	
	private final static Logger LOGGER = LoggerFactory.getLogger(ParentNetworkFinder.class);

	/**
	 * Examines {@code allNetworks} for matching parent networks. It does this by looking
	 * at {@link org.cytoscape.app.communitydetection.util.AppUtils#COLUMN_CD_ORIGINAL_NETWORK}
	 * network attribute to find a parent network with that SUID. If that fails 
	 * prov:wasGeneratedBy network attribute is examined to find parent network 
	 * with matching name. If prov:wasGeneratedBy includes UUID: ### then that
	 * is also used in search for matching parent network 
	 * format of prov:wasGeneratedBy 
	 * <NETWORK NAME>
	 * or
	 * <NETWORK NAME> UUID: #####
	 * 
	 * @param allNetworks
	 * @param hierarchyNetwork
	 * @return 
	 */
	List<CyNetwork> findParentNetworks(Set<CyNetwork> allNetworks, CyNetwork hierarchyNetwork){
		/*
		throw new Exception("Unable to find parent network with SUID: ### as noted in __originalnetwork"
		                        + " and with name: ###");
		*/
		return null;
	}
}
